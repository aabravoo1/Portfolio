|lifo
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => stack[15][0].CLK
clk => stack[15][1].CLK
clk => stack[15][2].CLK
clk => stack[15][3].CLK
clk => stack[15][4].CLK
clk => stack[15][5].CLK
clk => stack[14][0].CLK
clk => stack[14][1].CLK
clk => stack[14][2].CLK
clk => stack[14][3].CLK
clk => stack[14][4].CLK
clk => stack[14][5].CLK
clk => stack[13][0].CLK
clk => stack[13][1].CLK
clk => stack[13][2].CLK
clk => stack[13][3].CLK
clk => stack[13][4].CLK
clk => stack[13][5].CLK
clk => stack[12][0].CLK
clk => stack[12][1].CLK
clk => stack[12][2].CLK
clk => stack[12][3].CLK
clk => stack[12][4].CLK
clk => stack[12][5].CLK
clk => stack[11][0].CLK
clk => stack[11][1].CLK
clk => stack[11][2].CLK
clk => stack[11][3].CLK
clk => stack[11][4].CLK
clk => stack[11][5].CLK
clk => stack[10][0].CLK
clk => stack[10][1].CLK
clk => stack[10][2].CLK
clk => stack[10][3].CLK
clk => stack[10][4].CLK
clk => stack[10][5].CLK
clk => stack[9][0].CLK
clk => stack[9][1].CLK
clk => stack[9][2].CLK
clk => stack[9][3].CLK
clk => stack[9][4].CLK
clk => stack[9][5].CLK
clk => stack[8][0].CLK
clk => stack[8][1].CLK
clk => stack[8][2].CLK
clk => stack[8][3].CLK
clk => stack[8][4].CLK
clk => stack[8][5].CLK
clk => stack[7][0].CLK
clk => stack[7][1].CLK
clk => stack[7][2].CLK
clk => stack[7][3].CLK
clk => stack[7][4].CLK
clk => stack[7][5].CLK
clk => stack[6][0].CLK
clk => stack[6][1].CLK
clk => stack[6][2].CLK
clk => stack[6][3].CLK
clk => stack[6][4].CLK
clk => stack[6][5].CLK
clk => stack[5][0].CLK
clk => stack[5][1].CLK
clk => stack[5][2].CLK
clk => stack[5][3].CLK
clk => stack[5][4].CLK
clk => stack[5][5].CLK
clk => stack[4][0].CLK
clk => stack[4][1].CLK
clk => stack[4][2].CLK
clk => stack[4][3].CLK
clk => stack[4][4].CLK
clk => stack[4][5].CLK
clk => stack[3][0].CLK
clk => stack[3][1].CLK
clk => stack[3][2].CLK
clk => stack[3][3].CLK
clk => stack[3][4].CLK
clk => stack[3][5].CLK
clk => stack[2][0].CLK
clk => stack[2][1].CLK
clk => stack[2][2].CLK
clk => stack[2][3].CLK
clk => stack[2][4].CLK
clk => stack[2][5].CLK
clk => stack[1][0].CLK
clk => stack[1][1].CLK
clk => stack[1][2].CLK
clk => stack[1][3].CLK
clk => stack[1][4].CLK
clk => stack[1][5].CLK
clk => stack[0][0].CLK
clk => stack[0][1].CLK
clk => stack[0][2].CLK
clk => stack[0][3].CLK
clk => stack[0][4].CLK
clk => stack[0][5].CLK
clk => stack_pointer[0].CLK
clk => stack_pointer[1].CLK
clk => stack_pointer[2].CLK
clk => stack_pointer[3].CLK
clk => stack_pointer[4].CLK
asyn_n_rst => stack[15][0].ACLR
asyn_n_rst => stack[15][1].ACLR
asyn_n_rst => stack[15][2].ACLR
asyn_n_rst => stack[15][3].ACLR
asyn_n_rst => stack[15][4].ACLR
asyn_n_rst => stack[15][5].ACLR
asyn_n_rst => stack[14][0].ACLR
asyn_n_rst => stack[14][1].ACLR
asyn_n_rst => stack[14][2].ACLR
asyn_n_rst => stack[14][3].ACLR
asyn_n_rst => stack[14][4].ACLR
asyn_n_rst => stack[14][5].ACLR
asyn_n_rst => stack[13][0].ACLR
asyn_n_rst => stack[13][1].ACLR
asyn_n_rst => stack[13][2].ACLR
asyn_n_rst => stack[13][3].ACLR
asyn_n_rst => stack[13][4].ACLR
asyn_n_rst => stack[13][5].ACLR
asyn_n_rst => stack[12][0].ACLR
asyn_n_rst => stack[12][1].ACLR
asyn_n_rst => stack[12][2].ACLR
asyn_n_rst => stack[12][3].ACLR
asyn_n_rst => stack[12][4].ACLR
asyn_n_rst => stack[12][5].ACLR
asyn_n_rst => stack[11][0].ACLR
asyn_n_rst => stack[11][1].ACLR
asyn_n_rst => stack[11][2].ACLR
asyn_n_rst => stack[11][3].ACLR
asyn_n_rst => stack[11][4].ACLR
asyn_n_rst => stack[11][5].ACLR
asyn_n_rst => stack[10][0].ACLR
asyn_n_rst => stack[10][1].ACLR
asyn_n_rst => stack[10][2].ACLR
asyn_n_rst => stack[10][3].ACLR
asyn_n_rst => stack[10][4].ACLR
asyn_n_rst => stack[10][5].ACLR
asyn_n_rst => stack[9][0].ACLR
asyn_n_rst => stack[9][1].ACLR
asyn_n_rst => stack[9][2].ACLR
asyn_n_rst => stack[9][3].ACLR
asyn_n_rst => stack[9][4].ACLR
asyn_n_rst => stack[9][5].ACLR
asyn_n_rst => stack[8][0].ACLR
asyn_n_rst => stack[8][1].ACLR
asyn_n_rst => stack[8][2].ACLR
asyn_n_rst => stack[8][3].ACLR
asyn_n_rst => stack[8][4].ACLR
asyn_n_rst => stack[8][5].ACLR
asyn_n_rst => stack[7][0].ACLR
asyn_n_rst => stack[7][1].ACLR
asyn_n_rst => stack[7][2].ACLR
asyn_n_rst => stack[7][3].ACLR
asyn_n_rst => stack[7][4].ACLR
asyn_n_rst => stack[7][5].ACLR
asyn_n_rst => stack[6][0].ACLR
asyn_n_rst => stack[6][1].ACLR
asyn_n_rst => stack[6][2].ACLR
asyn_n_rst => stack[6][3].ACLR
asyn_n_rst => stack[6][4].ACLR
asyn_n_rst => stack[6][5].ACLR
asyn_n_rst => stack[5][0].ACLR
asyn_n_rst => stack[5][1].ACLR
asyn_n_rst => stack[5][2].ACLR
asyn_n_rst => stack[5][3].ACLR
asyn_n_rst => stack[5][4].ACLR
asyn_n_rst => stack[5][5].ACLR
asyn_n_rst => stack[4][0].ACLR
asyn_n_rst => stack[4][1].ACLR
asyn_n_rst => stack[4][2].ACLR
asyn_n_rst => stack[4][3].ACLR
asyn_n_rst => stack[4][4].ACLR
asyn_n_rst => stack[4][5].ACLR
asyn_n_rst => stack[3][0].ACLR
asyn_n_rst => stack[3][1].ACLR
asyn_n_rst => stack[3][2].ACLR
asyn_n_rst => stack[3][3].ACLR
asyn_n_rst => stack[3][4].ACLR
asyn_n_rst => stack[3][5].ACLR
asyn_n_rst => stack[2][0].ACLR
asyn_n_rst => stack[2][1].ACLR
asyn_n_rst => stack[2][2].ACLR
asyn_n_rst => stack[2][3].ACLR
asyn_n_rst => stack[2][4].ACLR
asyn_n_rst => stack[2][5].ACLR
asyn_n_rst => stack[1][0].ACLR
asyn_n_rst => stack[1][1].ACLR
asyn_n_rst => stack[1][2].ACLR
asyn_n_rst => stack[1][3].ACLR
asyn_n_rst => stack[1][4].ACLR
asyn_n_rst => stack[1][5].ACLR
asyn_n_rst => stack[0][0].ACLR
asyn_n_rst => stack[0][1].ACLR
asyn_n_rst => stack[0][2].ACLR
asyn_n_rst => stack[0][3].ACLR
asyn_n_rst => stack[0][4].ACLR
asyn_n_rst => stack[0][5].ACLR
asyn_n_rst => stack_pointer[0].PRESET
asyn_n_rst => stack_pointer[1].PRESET
asyn_n_rst => stack_pointer[2].PRESET
asyn_n_rst => stack_pointer[3].PRESET
asyn_n_rst => stack_pointer[4].PRESET
asyn_n_rst => data_out[0]~reg0.ENA
asyn_n_rst => data_out[5]~reg0.ENA
asyn_n_rst => data_out[4]~reg0.ENA
asyn_n_rst => data_out[3]~reg0.ENA
asyn_n_rst => data_out[2]~reg0.ENA
asyn_n_rst => data_out[1]~reg0.ENA
push => stack_pointer.OUTPUTSELECT
push => stack_pointer.OUTPUTSELECT
push => stack_pointer.OUTPUTSELECT
push => stack_pointer.OUTPUTSELECT
push => stack_pointer.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => stack.OUTPUTSELECT
push => data_out.OUTPUTSELECT
push => data_out.OUTPUTSELECT
push => data_out.OUTPUTSELECT
push => data_out.OUTPUTSELECT
push => data_out.OUTPUTSELECT
push => data_out.OUTPUTSELECT
pop => data_out.OUTPUTSELECT
pop => data_out.OUTPUTSELECT
pop => data_out.OUTPUTSELECT
pop => data_out.OUTPUTSELECT
pop => data_out.OUTPUTSELECT
pop => data_out.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack.OUTPUTSELECT
pop => stack_pointer.OUTPUTSELECT
pop => stack_pointer.OUTPUTSELECT
pop => stack_pointer.OUTPUTSELECT
pop => stack_pointer.OUTPUTSELECT
pop => stack_pointer.OUTPUTSELECT
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[0] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[1] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[2] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[3] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[4] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_in[5] => stack.DATAB
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
full <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


